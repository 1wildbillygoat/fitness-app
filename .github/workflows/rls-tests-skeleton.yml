name: RLS Tests Skeleton
on:
  workflow_dispatch:
    inputs:
      issue_key: { description: "Linear key (e.g., FIT-17)", required: true }
      branch: { description: "Branch (e.g., fit-17-rls-tests-skeleton)", required: true }

jobs:
  gen:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Add RLS tests scaffold
        run: |
          mkdir -p supabase/tests/rls
          cat > supabase/tests/rls/README.md <<'EOF'
          # RLS Test Suite
          Goal: prove owner-only access and deny cross-user reads/writes.
          Simulate users by setting request.jwt.claims -> {"sub": "<uuid>"}.
          EOF

          cat > supabase/tests/rls/01_profiles_owner.sql <<'EOF'
          begin;
          select set_config('request.jwt.claims','{"sub":"00000000-0000-4000-8000-000000000001"}', true);
          insert into profiles(id, display_name) values ('00000000-0000-4000-8000-000000000001','userA') on conflict do nothing;
          select count(*) as own_profile_rows from profiles where id = '00000000-0000-4000-8000-000000000001';
          rollback;
          EOF

          cat > supabase/tests/rls/02_workouts_owner.sql <<'EOF'
          begin;
          select set_config('request.jwt.claims','{"sub":"00000000-0000-4000-8000-000000000001"}', true);
          insert into workouts(user_id, started_at) values ('00000000-0000-4000-8000-000000000001', now());
          select count(*) as my_workouts from workouts where user_id = '00000000-0000-4000-8000-000000000001';
          rollback;
          EOF

          cat > supabase/tests/rls/03_cross_user_denied.sql <<'EOF'
          begin;
          -- seed as admin (adjust if no superuser)
          set role postgres;
          insert into workouts(user_id, started_at) values ('00000000-0000-4000-8000-000000000001', now());
          reset role;

          select set_config('request.jwt.claims','{"sub":"00000000-0000-4000-8000-000000000002"}', true);
          select count(*) as cross_user_reads from workouts where user_id = '00000000-0000-4000-8000-000000000001';
          rollback;
          EOF

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Commit and open PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "${{ github.event.inputs.branch }}"
          git add -A
          git commit -m "${{ github.event.inputs.issue_key }} add RLS test suite skeleton"
          git push origin "${{ github.event.inputs.branch }}"
          gh pr create --base main --head "${{ github.event.inputs.branch }}" \
            --title "${{ github.event.inputs.issue_key }}: RLS test suite skeleton" \
            --body "Adds SQL-based RLS tests and README."
