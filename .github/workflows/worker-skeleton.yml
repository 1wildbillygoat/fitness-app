name: Worker Skeleton
on:
  workflow_dispatch:
    inputs:
      issue_key: { description: "Linear key (e.g., FIT-18)", required: true }
      branch:    { description: "Branch (e.g., fit-18-worker-skeleton)", required: true }

jobs:
  gen:
    runs-on: ubuntu-latest
    permissions: { contents: write, pull-requests: write }
    steps:
      - uses: actions/checkout@v4

      - name: Seed Cloudflare Worker (Hono)
        run: |
          mkdir -p api-facade
          cat > api-facade/worker.ts <<'EOF'
          import { Hono } from 'hono'
          import { z } from 'zod'
          const app = new Hono()

          app.get('/v1/healthz', (c) => c.text('ok'))

          const Workout = z.object({ started_at: z.string().datetime() })
          app.post('/v1/workouts', async (c) => {
            const body = await c.req.json().catch(() => ({}))
            const parsed = Workout.safeParse(body)
            if (!parsed.success) return c.json({ error: 'invalid_body' }, 400)
            // TODO: call Supabase with service role (server-side only)
            return c.json({ id: 1, ...parsed.data }, 201)
          })

          app.post('/v1/inference', (c) => c.json({ request_id: crypto.randomUUID(), status: 'queued' }, 202))
          app.get('/v1/inference/:id', (c) => c.json({ id: c.req.param('id'), status: 'succeeded' }))

          export default app
          EOF

          cat > api-facade/package.json <<'EOF'
          {
            "name": "api-facade",
            "private": true,
            "type": "module",
            "dependencies": {
              "hono": "^4.6.8",
              "zod": "^3.23.8"
            }
          }
          EOF

          cat > api-facade/README.md <<'EOF'
          # API Facade (Cloudflare Worker)
          - Endpoints: /v1/healthz, /v1/workouts (POST), /v1/inference (POST/GET)
          - Add JWT auth, rate limits, HMAC webhook verification next.
          EOF

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Commit and open PR
        env: { GH_TOKEN: ${{ github.token }} }
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "${{ github.event.inputs.branch }}"
          git add -A
          git commit -m "${{ github.event.inputs.issue_key }} add Cloudflare Worker skeleton"
          git push origin "${{ github.event.inputs.branch }}"
          gh pr create --base main --head "${{ github.event.inputs.branch }}" \
            --title "${{ github.event.inputs.issue_key }}: API facade (Cloudflare Worker) skeleton" \
            --body "Adds Hono-based Worker with /v1 routes and Zod validation."
