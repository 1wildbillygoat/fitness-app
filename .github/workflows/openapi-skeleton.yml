name: OpenAPI Skeleton
on:
  workflow_dispatch:
    inputs:
      issue_key: { description: "Linear key (e.g., FIT-4)", required: true }
      branch: { description: "Branch (e.g., fit-4-openapi-skeleton)", required: true }

jobs:
  gen:
    runs-on: ubuntu-latest
    permissions: { contents: write, pull-requests: write }
    steps:
      - uses: actions/checkout@v4
      - name: Generate openapi.yaml
        run: |
          mkdir -p api
          cat > api/openapi.yaml <<'EOF'
          openapi: 3.0.3
          info:
            title: Fitness App API
            version: 1.0.0
          servers:
            - url: https://staging.api.fitness-app.example/v1
          components:
            securitySchemes:
              bearerAuth:
                type: http
                scheme: bearer
                bearerFormat: JWT
          security: [ { bearerAuth: [] } ]
          paths:
            /healthz:
              get:
                summary: Liveness
                responses: { "200": { description: OK } }
            /workouts:
              get: { summary: List workouts, responses: { "200": { description: OK } } }
              post:
                summary: Create workout
                requestBody: { required: true, content: { application/json: { schema: { type: object, properties: { started_at: { type: string, format: date-time } }, required: [started_at] } } } }
                responses: { "201": { description: Created } }
            /inference:
              post:
                summary: Submit async inference job
                responses: { "202": { description: Accepted } }
            /inference/{id}:
              get:
                summary: Get job status
                parameters: [ { name: id, in: path, required: true, schema: { type: string } } ]
                responses: { "200": { description: OK } }
            /webhooks/{provider}:
              post:
                summary: Provider webhook
                parameters: [ { name: provider, in: path, required: true, schema: { type: string } } ]
                responses: { "204": { description: No Content } }
          EOF
      - name: Create branch and PR
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "${{ github.event.inputs.branch }}"
          git add -A
          git commit -m "${{ github.event.inputs.issue_key }} add OpenAPI skeleton"
          git push origin "${{ github.event.inputs.branch }}"
          gh pr create --base main --head "${{ github.event.inputs.branch }}" \
            --title "${{ github.event.inputs.issue_key }}: openapi.yaml skeleton" \
            --body "Adds initial OpenAPI spec with auth, workouts, inference, and webhooks."
        env: { GH_TOKEN: ${{ github.token }} }
